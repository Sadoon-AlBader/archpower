# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>
pkgname=ungoogled-chromium
pkgver=83.0.4103.97
pkgrel=1
pkgdesc="Google Chromium, sans integration with Google - PPC64LE FORK"
arch=(x86_64 powerpc64le)
url="https://github.com/leo-lb/ungoogled-chromium/tree/master"
license=('GPL')
conflicts=('chromium')
provides=('chromium')
replaces=('ungoogled-chromium-archlinux')
depends=('llvm-libs' 'glib2' 'libcups' 'nss' 'openssl' 'pango' 'dbus' 'atk' 'gtk3'
	 'krb5' 'pulseaudio' 'libxss' 're2c' 'curl' 'alsa-lib' 'gperf' 'mesa' 'at-spi2-atk'
	 'libgnome-keyring' 'libva' 'pciutils')
makedepends=('git' 'llvm' 'clang' 'pkgconf' 'python' 'python2' 'cmake' 'bison' 'nodejs' 'gn' 'ninja' 'xorgproto' 'lld'
	     'python-setuptools' 'python2-setuptools')
commit="31d6e37fdc01a827e5ce7e737de3c038672bd677"
source=("git+https://github.com/leo-lb/ungoogled-chromium.git#commit=${commit}"
	'recent-python-ffmpeg.patch'
        'vdpau-support.patch'
        'fix-intel-vaapi-wayland.patch'
        'clean-up-a-call-to-set_utf8.patch'
        'iwyu-std-numeric_limits-is-defined-in-limits.patch'
        'add-missing-algorithm-header-in-crx_install_error.cc.patch'
        'libstdc-fix-incomplete-type-in-AXTree-for-NodeSetSiz.patch'
        'include-memory-header-to-get-the-definition-of-std-u.patch'
        'make-some-of-blink-custom-iterators-STL-compatible.patch'
        'avoid-double-destruction-of-ServiceWorkerObjectHost.patch'
        'chromium-83-gcc-10.patch'
        'chromium-skia-harmony.patch')
sha256sums=('SKIP'
            '97b21f30e380e2c7137075bc9e2defa0cbd38b66028aab7361d3ed3fe39fd7fc'
            '0ec6ee49113cc8cc5036fa008519b94137df6987bf1f9fbffb2d42d298af868a'
            'f6335d1e14e4ed865f37695d67df18008c8664778620e698bb46c35b88a8b4c2'
            '58c41713eb6fb33b6eef120f4324fa1fb8123b1fbc4ecbe5662f1f9779b9b6af'
            '675fb3d6276cce569a641436465f58d5709d1d4a5f62b7052989479fd4aaea24'
            '0e2a78e4aa7272ab0ff4a4c467750e01bad692a026ad9828aaf06d2a9418b9d8'
            '50687079426094f2056d1f4806dc30fc8d6bad16190520e57ba087ec5db1d778'
            '071326135bc25226aa165639dff80a03670a17548f2d2ff5cc4f40982b39c52a'
            '3d7f20e1d2ee7d73ed25e708c0d59a0cb215fcce10a379e3d48a856533c4b0b7'
            'd793842e9584bf75e3779918297ba0ffa6dd05394ef5b2bf5fb73aa9c86a7e2f'
            '3e5ba8c0a70a4bc673deec0c61eb2b58f05a4c784cbdb7c8118be1eb6580db6d'
            '771292942c0901092a402cc60ee883877a99fb804cb54d568c8c6c94565a48e1')

pkgver() {
	cat "$srcdir/${pkgname}"/chromium_version.txt
}

prepare() {
	_cache_dir=${srcdir}/../download-cache
	[ ! -z "${SRCDEST}" ] && _cache_dir=${SRCDEST}/ungoogled-chrome
	msg2 "Using ${_cache_dir} for download cache"

	msg2 "Updating GIT submdules..."
	cd "$srcdir/${pkgname}"
	git submodule update --init

	mkdir -p ${_cache_dir} build/src 
	msg2 'Downloading and extracting chrome...'
	./utils/downloads.py retrieve -c ${_cache_dir} -i downloads.ini
	./utils/downloads.py unpack -c ${_cache_dir}  -i downloads.ini -- build/src

	patch -Np1 -i ${srcdir}/recent-python-ffmpeg.patch

	msg2 'Pruning binaries...'
	./utils/prune_binaries.py build/src pruning.list

	msg2 'Applying patches...'
	./utils/patches.py apply build/src patches

	msg2 'Applying domain substituions...'
	./utils/domain_substitution.py apply -r domain_regex.list -f domain_substitution.list -c build/domsubcache.tar.gz build/src

	cd build/src

	msg2 'Apply our patches (thx AUR)'
        # https://chromium-review.googlesource.com/c/chromium/src/+/2145261
        patch -Np1 -i ${srcdir}/clean-up-a-call-to-set_utf8.patch

        # https://chromium-review.googlesource.com/c/chromium/src/+/2153111
        patch -Np1 -F3 -i ${srcdir}/iwyu-std-numeric_limits-is-defined-in-limits.patch

        # https://chromium-review.googlesource.com/c/chromium/src/+/2152333
        patch -Np1 -i ${srcdir}/add-missing-algorithm-header-in-crx_install_error.cc.patch

        # https://chromium-review.googlesource.com/c/chromium/src/+/2132403
        patch -Np1 -i ${srcdir}/libstdc-fix-incomplete-type-in-AXTree-for-NodeSetSiz.patch

        # https://chromium-review.googlesource.com/c/chromium/src/+/2164645
        patch -Np1 -i ${srcdir}/include-memory-header-to-get-the-definition-of-std-u.patch

        # https://chromium-review.googlesource.com/c/chromium/src/+/2174199
        patch -Np1 -i ${srcdir}/make-some-of-blink-custom-iterators-STL-compatible.patch

        # https://chromium-review.googlesource.com/c/chromium/src/+/2094496
        patch -Np1 -i ${srcdir}/avoid-double-destruction-of-ServiceWorkerObjectHost.patch

        # https://crbug.com/skia/6663#c10
        patch -Np0 -i ${srcdir}/chromium-skia-harmony.patch

        # Fixes from Gentoo
        patch -Np1 -i ${srcdir}/chromium-83-gcc-10.patch

        # Fix VA-API on Nvidia
        patch -Np1 -i ${srcdir}/vdpau-support.patch

        # Fix VA-API on Intel on Wayland
        patch -Np1 -i ${srcdir}/fix-intel-vaapi-wayland.patch

	msg2 'Use system nodejs'
        mkdir -p third_party/node/linux/node-linux-ppc64/bin
        ln -s /usr/bin/node third_party/node/linux/node-linux-ppc64/bin/


        msg2 'Fix up Python2/3 the lean way'
	mkdir -p ${srcdir}/python
        ln -sf /usr/bin/python ${srcdir}/python/python3
        ln -sf /usr/bin/python2 ${srcdir}/python/python
        export PATH=${srcdir}/python:${PATH}
}

build() {
	cd "$srcdir/${pkgname}"/build/src

	if check_buildoption ccache y; then
	  # Avoid falling back to preprocessor mode when sources contain time macros
	  export CCACHE_SLOPPINESS=time_macros
	fi

	export PATH=${srcdir}/python:${PATH}

	export CC=clang
	export CXX=clang++
	export AR=llvm-ar
	export NM=llvm-nm

	cd third_party/libvpx
	mkdir -p source/config/linux/ppc64
	./generate_gni.sh
	cd ../../

	cd third_party/ffmpeg
	./chromium/scripts/build_ffmpeg.py linux ppc64
	./chromium/scripts/generate_gn.py
	./chromium/scripts/copy_config.sh
	cd ../../

	mkdir -p out/Default
	cp "${srcdir}/${pkgname}"/flags.gn out/Default/args.gn
	printf '\n' >> "out/Default/args.gn"
	echo "custom_toolchain=\"//build/toolchain/linux/unbundle:default\"
ffmpeg_branding=\"ChromeOS\"
gold_path=\"\"
goma_dir=\"\"
host_toolchain=\"//build/toolchain/linux/unbundle:default\"
is_clang=true
link_pulseaudio=true" >> out/Default/args.gn


	gn gen out/Default --fail-on-unused-args
	ninja ${MAKEFLAGS} -C out/Default chrome chrome_sandbox chromedriver	
}

package() {
	cd "${srcdir}/${pkgname}"/build/src
	mkdir -p ${pkgdir}/usr/{bin,lib}

	install -D out/Default/chrome "$pkgdir/usr/lib/chromium/chromium"
        ln -s /usr/lib/chromium/chromium ${pkgdir}/usr/bin/chromium
	install -Dm4755 out/Default/chrome_sandbox "$pkgdir/usr/lib/chromium/chrome-sandbox"
	ln -s /usr/lib/$pkgname/chromedriver "$pkgdir/usr/bin/chromedriver"

	install -Dm644 chrome/installer/linux/common/desktop.template \
	  "$pkgdir/usr/share/applications/chromium.desktop"
	install -Dm644 chrome/app/resources/manpage.1.in \
	  "$pkgdir/usr/share/man/man1/chromium.1"
	sed -i \
	  -e "s/@@MENUNAME@@/Chromium/g" \
	  -e "s/@@PACKAGE@@/chromium/g" \
	  -e "s/@@USR_BIN_SYMLINK_NAME@@/chromium/g" \
	  "$pkgdir/usr/share/applications/chromium.desktop" \
	  "$pkgdir/usr/share/man/man1/chromium.1"

	cp \
	  out/Default/{chrome_{100,200}_percent,resources}.pak \
	  out/Default/{*.bin,chromedriver} \
	  "$pkgdir/usr/lib/chromium/"
	install -Dm644 -t "$pkgdir/usr/lib/chromium/locales" out/Default/locales/*.pak

	if [[ -z ${_system_libs[icu]+set} ]]; then
	  cp out/Default/icudtl.dat "$pkgdir/usr/lib/chromium/"
	fi

	for size in 24 48 64 128 256; do
	  install -Dm644 "chrome/app/theme/chromium/product_logo_$size.png" \
	    "$pkgdir/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png"
	done

	for size in 16 32; do
	  install -Dm644 "chrome/app/theme/default_100_percent/chromium/product_logo_$size.png" \
	    "$pkgdir/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png"
	done

	install -Dm644 LICENSE "$pkgdir/usr/share/licenses/chromium/LICENSE"
}
