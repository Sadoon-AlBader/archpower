From b77d908270f2535cc0488666e90b5100700e38b6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Vicen=C8=9Biu=20Ciorbaru?= <vicentiu@mariadb.org>
Date: Fri, 21 Dec 2018 19:14:04 +0200
Subject: [PATCH 4/6] cmake: Link with libatomic to enable C11 atomics support

Some architectures (mips) require libatomic to support proper
atomic operations. Check first if support is available without
linking, otherwise use the library.

Signed-off-by: Thomas Deutschmann <whissi@gentoo.org>
---
 configure.cmake      | 23 +++++++++++++++++++++--
 mysys/CMakeLists.txt |  4 ++++
 sql/CMakeLists.txt   |  4 ++++
 3 files changed, 29 insertions(+), 2 deletions(-)

diff --git a/mysys/CMakeLists.txt b/mysys/CMakeLists.txt
index 14a4ea9e..6cccc927 100644
--- a/mysys/CMakeLists.txt
+++ b/mysys/CMakeLists.txt
@@ -134,6 +134,10 @@ IF(HAVE_BFD_H)
   TARGET_LINK_LIBRARIES(mysys bfd)  
 ENDIF(HAVE_BFD_H)
 
+IF(HAVE_GCC_C11_ATOMICS_WITH_LIBATOMIC)
+  TARGET_LINK_LIBRARIES(mysys atomic)
+ENDIF()
+
 IF (WIN32)
   TARGET_LINK_LIBRARIES(mysys IPHLPAPI)  
 ENDIF(WIN32)
diff --git a/sql/CMakeLists.txt b/sql/CMakeLists.txt
index d2180297..b451bf15 100644
--- a/sql/CMakeLists.txt
+++ b/sql/CMakeLists.txt
@@ -198,6 +198,10 @@ TARGET_LINK_LIBRARIES(sql
   ${SSL_LIBRARIES}
   ${LIBSYSTEMD})
 
+IF(HAVE_GCC_C11_ATOMICS_WITH_LIBATOMIC)
+  TARGET_LINK_LIBRARIES(sql atomic)
+ENDIF()
+
 IF(TARGET pcre2)
   ADD_DEPENDENCIES(sql pcre2)
 ENDIF()
-- 
2.28.0

--- a/configure.cmake.orig	2020-11-10 13:14:53.000000000 +0000
+++ b/configure.cmake	2020-12-30 21:17:52.253000000 +0000
@@ -136,7 +136,7 @@
   ENDIF()
   FIND_PACKAGE(Threads)
 
-  SET(CMAKE_REQUIRED_LIBRARIES 
+  LIST(APPEND CMAKE_REQUIRED_LIBRARIES 
     ${LIBM} ${LIBNSL} ${LIBBIND} ${LIBCRYPT} ${LIBSOCKET} ${CMAKE_DL_LIBS} ${CMAKE_THREAD_LIBS_INIT} ${LIBRT} ${LIBEXECINFO})
   # Need explicit pthread for gcc -fsanitize=address
   IF(CMAKE_USE_PTHREADS_INIT AND CMAKE_C_FLAGS MATCHES "-fsanitize=")
@@ -861,7 +861,26 @@
   long long int *ptr= &var;
   return (int)__atomic_load_n(ptr, __ATOMIC_SEQ_CST);
 }"
-HAVE_GCC_C11_ATOMICS)
+HAVE_GCC_C11_ATOMICS_WITHOUT_LIBATOMIC)
+IF(HAVE_GCC_C11_ATOMICS_WITHOUT_LIBATOMIC)
+  SET(HAVE_GCC_C11_ATOMICS True)
+ELSE()
+  SET(OLD_CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES})
+  LIST(APPEND CMAKE_REQUIRED_LIBRARIES "atomic")
+  CHECK_CXX_SOURCE_COMPILES("
+  int main()
+  {
+    long long int var= 1;
+    long long int *ptr= &var;
+    return (int)__atomic_load_n(ptr, __ATOMIC_SEQ_CST);
+  }"
+  HAVE_GCC_C11_ATOMICS_WITH_LIBATOMIC)
+  IF(HAVE_GCC_C11_ATOMICS_WITH_LIBATOMIC)
+    SET(HAVE_GCC_C11_ATOMICS True)
+  ELSE()
+    SET(CMAKE_REQUIRED_LIBRARIES ${OLD_CMAKE_REQUIRED_LIBRARIES})
+  ENDIF()
+ENDIF()
 
 IF(WITH_VALGRIND)
   SET(HAVE_valgrind 1)
